
import org.landa.wiidget.library.template.@;
import org.landa.wiidget.library.html.@;
import org.landa.wiidget.library.html.table.@;
import org.landa.wiidget.library.html.datatable.@;
import org.landa.wiidget.library.html.base.@;
import org.landa.wiidget.library.util.@;
<<<<<<< HEAD


$loopHelper : LoopHelper;
=======
import wiidget.@;


$loops : Loops;
>>>>>>> 612cb241b590b46a7445cfe51be64ae1d527fe6d

Template(value = "/layout/main.wdgt", removePlaceholders = true, messageVal = "From template"){
	
	SimplePart(name = "title", value = title ~ "Default page title");
	
	Part("body"){
		
<<<<<<< HEAD
		Out(messageVal);
=======
		Div{
			Out(messageVal);
		}
>>>>>>> 612cb241b590b46a7445cfe51be64ae1d527fe6d
		
//		seam($factory.table($data.getAnimals(), m["hello"] )){			
//			Column(field = "name", header = "Név");
//			Column(field = "age", header = "Kora");			
//		}
<<<<<<< HEAD
	
		foreach(i : $loopHelper.loop(1, 3, 1)){
			
			$table : PageableDataTable(id="animals" + i, value = animals, cssClass="table table-striped table-hover"){
				
				Column(field = "name", header = "Név");
				Column(field = "age", header = "Kora");
				
				LinkPaginator(dataTable = $table, itemsPerPage = 12);		
			}
			LinkPaginator(dataTable = $table, itemsPerPage = 12);
			
		}
		
		Label(fafd ~ "Default value");
		
		Label(value = m["hello"], rendered = flash_error ~ true);
=======
		
		Accordion{
			
			AccordionItem(active = true){
				Part("title"){
					Out("Title")
				}
				Part("content"){
					Out("Content");
				}
			}
			AccordionItem{
				Part("title"){
					Out("Title2")
				}
				Part("content"){
					Out("Content2");
				}
			}
			
		}
	
		$table : PageableDataTable(id="animals" + i, value=animals, cssClass="ui inverted red segment table"){
			
			Column(field = "name", header = "Név");
			Column(field = "age", header = "Kora");
			
			LinkPaginator(dataTable = $table, itemsPerPage = 5, cssClass="ui pagination menu");		
		}
		LinkPaginator(dataTable = $table, itemsPerPage = 5, cssClass="ui pagination menu");
	
		Paragraph{
			Label(fafd ~ "Default value");		
			Label(value = m["hello"], rendered = flash_error ~ true);
		}
>>>>>>> 612cb241b590b46a7445cfe51be64ae1d527fe6d
	}	
}